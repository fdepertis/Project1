<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/tree/tree.py" timestamp="1538903064336">
        <mark key="[" line="115" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/tree/linked_binary_tree.py" timestamp="1539097766263">
        <mark key="[" line="35" column="24" />
        <mark key="]" line="110" column="30" />
        <mark key="^" line="110" column="30" />
        <mark key="." line="110" column="30" />
      </file>
      <file name="/Dummy.txt" timestamp="1539259724038">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/tdp_test/ese_tree_binarySearchTree.py" timestamp="1539071102893">
        <mark key="'" line="12" column="91" />
        <mark key="[" line="184" column="0" />
        <mark key="]" line="184" column="0" />
        <mark key="." line="184" column="0" />
      </file>
      <file name="/Python Console" timestamp="1539122890002">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/map/map_base.py" timestamp="1539071427306">
        <mark key="[" line="33" column="20" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/map/binary_search_tree.py" timestamp="1539071074438">
        <mark key="[" line="23" column="0" />
      </file>
      <file name="/a.dummy" timestamp="1539165751027">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/circular_positional_list.py" timestamp="1539264176918">
        <mark key="[" line="128" column="12" />
        <mark key="]" line="128" column="12" />
        <mark key="." line="128" column="12" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/tree/binary_tree.py" timestamp="1538985562353">
        <mark key="[" line="78" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/project1/ese_tree_binarySearchTree.py" timestamp="1539095263335">
        <mark key="[" line="184" column="10" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/list/positional_list.py" timestamp="1539256843309">
        <mark key="[" line="85" column="6" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/test_circular_positional_list.py" timestamp="1539262383534">
        <mark key="[" line="37" column="49" />
        <mark key="]" line="40" column="4" />
        <mark key="." line="40" column="4" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/util.py" timestamp="1538997020032">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/project1/reverse.py" timestamp="1539259716981">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/tdp_test/test_circular_positional_list.py" timestamp="1539242621748">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/MyList.py" timestamp="1539068725620">
        <mark key="[" line="40" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="12" column="91" filename="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/tdp_test/ese_tree_binarySearchTree.py" />
    </jumps>
    <registers>
      <register name="1" type="4">
        <text>print(&quot;SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS&quot;)
            print(self.to_string())
            print(&quot;SSSSSSSSSSSSSSSSSSssssssssssssssssssssssssssssssssssssssss&quot;)</text>
      </register>
      <register name="&quot;" type="4">
        <text>cursor_to_delete = cursor</text>
      </register>
      <register name="2" type="4">
        <text>first_cursor = self.first()
        last_cursor = self.last()
        #print(last_cursor.element(),self.before(last_cursor).element(),self.before(self.before(last_cursor)).element(),self.before(self.before(self.before(last_cursor))).element())
        f</text>
      </register>
      <register name="3" type="4">
        <text>print(first_cursor.element(), last_cursor.element())
            if k == (self._size/2):
                
            first_cursor._node._element = last_cursor._node._element
            first_cursor = self.after(first_cursor)
            last_cursor = self.before(last_cursor)</text>
      </register>
      <register name="4" type="4">
        <text encoding="base64">b3B5X2N1cnNvciA9IHNlbGYuY29weSgpCiAgICAgICAg</text>
      </register>
      <register name="5" type="4">
        <text>if k == (self._size/2):
               
            else:
                first_cursor._node._element = last_cursor._node._element
            first_cursor = self.after(first_cursor)</text>
      </register>
      <register name="6" type="4">
        <text>print(str(cpl))
    cpl.reverse()
    print(str(cpl))
    print(&quot;--------------------------------&quot;)</text>
      </register>
      <register name="7" type="4">
        <text>print(&quot;EEEEEEEEEEEEEEEEEEEEEEEEE&quot;)
    print(cpl.last().element(),cpl.before(cpl.last()).element(),cpl.before(cpl.before(cpl.last())).element())
    print(cpl.first().element(),cpl.after(cpl.first()).element(),cpl.after(cpl.after(cpl.first())).element())
    print(&quot;EEEEEEEEEEEEEEEEEEEEEEEEE&quot;)
    print(str(cpl))
    cpl.reverse()
    print(str(cpl))
    print(&quot;--------------------------------&quot;)</text>
      </register>
      <register name="8" type="4">
        <text encoding="base64">CiAgICAiIiIKICAgIGRlZiBfc2V0X25vZGUoc2VsZiwgY2hvaWNlLCBlPU5vbmUsbmV3X25vZGU9Tm9uZSk6CiAgICAgICAgaWYgY2hvaWNlID09IDA6CiAgICAgICAgICAgIHNlbGYuX2hlYWRlciA9IHNlbGYuX05vZGUoZSwgc2VsZi5faGVhZGVyLCBzZWxmLl9oZWFkZXIpCiAgICAgICAgICAgIHNlbGYuX2hlYWRlci5fbmV4dCA9IHNlbGYuX2hlYWRlcgogICAgICAgICAgICBzZWxmLl9oZWFkZXIuX3ByZXYgPSBzZWxmLl9oZWFkZXIKICAgICAgICAgICAgc2VsZi5fc2l6ZSA9IDEKICAgICAgICBlbHNlOgogICAgICAgICAgICBwcmludChzZWxmLl9oZWFkZXIuX3ByZXYpCiAgICAgICAgICAgIHNlbGYuX2hlYWRlci5fcHJldi5fbmV4dCA9IG5ld19ub2RlCiAgICAgICAgICAgIHNlbGYuX2hlYWRlci5fcHJldiA9IG5ld19ub2RlCiAgICAgICAgICAgIGlmIGNob2ljZSA9PSAzOgogICAgICAgICAgICAgICAgc2VsZi5fc2l6ZSArPSAxCiAgICAgICAgaWYgY2hvaWNlID09IDI6CiAgICAgICAgICAgIHNlbGYuX2hlYWRlciA9IG5ld19ub2RlCiAgICAgICAgICAgIHNlbGYuX3NpemUgKz0gMQoKCiAgICBkZWYgYWRkX2ZpcnN0KHNlbGYsIGUpOgogICAgCiAgICAgICAgaWYgc2VsZi5pc19lbXB0eSgpOgogICAgICAgICAgICBzZWxmLl9zZXRfbm9kZSgwLGUpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgbmV3X25vZGUgPSBzZWxmLl9Ob2RlKGUsIHNlbGYuX2hlYWRlci5fcHJldiwgc2VsZi5faGVhZGVyKQogICAgICAgICAgICBzZWxmLl9zZXRfbm9kZSgyLE5vbmUsbmV3X25vZGUpCiAgICAgICAgcmV0dXJuIHNlbGYuX21ha2VfcG9zaXRpb24oc2VsZi5faGVhZGVyKQoKICAgIGRlZiBhZGRfbGFzdChzZWxmLCBlKToKICAgICAgICAKICAgICAgICBpZiBzZWxmLmlzX2VtcHR5KCk6CiAgICAgICAgICAgIHByaW50KCJkZGRkZGRkIixlKQogICAgICAgICAgICBzZWxmLl9zZXRfbm9kZSgwLGUpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgbmV3X25vZGUgPSBzZWxmLl9Ob2RlKGUsIHNlbGYuX2hlYWRlciwgc2VsZi5faGVhZGVyLl9wcmV2KQogICAgICAgICAgICBzZWxmLl9zZXRfbm9kZSgzLCBOb25lLCBuZXdfbm9kZSkKICAgICAgICByZXR1cm4gc2VsZi5fbWFrZV9wb3NpdGlvbihzZWxmLl9oZWFkZXIuX3ByZXYpCiAgICAiIiIKCiAgICAiIiIKICAgIGRlZiBhZGRfZmlyc3Qoc2VsZixlKToKICAgICAgICAjSW5zZXJpc2NlIGwnZWxlbWVudG8gZSBpbiB0ZXN0YSBhbGxhIGxpc3RhIGUgcmVzdGl0dWlzY2UgbGEgUG9zaXRpb24gZGVsIG51b3ZvIGVsZW1lbnRvCiAgICAgICAgCiAgICAgICAgaWYgc2VsZi5pc19lbXB0eSgpOgogICAgICAgICAgICBzZWxmLl9oZWFkZXIgPSBzZWxmLl9Ob2RlKGUsc2VsZi5faGVhZGVyLHNlbGYuX2hlYWRlcikKICAgICAgICAgICAgc2VsZi5faGVhZGVyLl9uZXh0ID0gc2VsZi5faGVhZGVyI3JpYWdnaW9ybm8gaSBwdW50YXRvcmkgZGkgaGVhZGVyIHNpY2NvbWUgcHJpbWEgZGkgaXN0YW56aWFyZSBsYSBjbGFzc2UgcXVlc3RpIHB1bnRhdmFubyBhIG5vbmUgbWVudHJlIGlvIHZvZ2xpbyBjaGUgb3JhIHB1bnRpbm8gYWwgbm9kbyBhZ2dpb3JuYXRvIGRpIGhlYWRlcgogICAgICAgICAgICBzZWxmLl9oZWFkZXIuX3ByZXYgPSBzZWxmLl9oZWFkZXIKICAgICAgICAgICAgc2VsZi5fc2l6ZSA9IDEKICAgICAgICAgICAgI3ByaW50KCJRUVFRUVFRUVFRUVFRUVFRUVFRUVFRIiwgc2VsZi5faGVhZGVyLl9lbGVtZW50KQogICAgICAgICAgICByZXR1cm4gc2VsZi5fbWFrZV9wb3NpdGlvbihzZWxmLl9oZWFkZXIpCiAgICAgICAgaWYgc2VsZi5fX2xlbl9fKCkgPT0gMTojU2UgYydlJyB1biBzb2xvIGVsZW1lbnRvIGFnZ2l1bmdpIHVuIG5vZG8gYWxsYSB0ZXN0YSBkZWxsYSBsaXN0YSBlIGNyZWEgdW4gbnVvdm8gbm9kbyBjb24gZWxlbWVudCBoZWFkZXIgZSBjb2xsZWdhCiAgICAgICAgICAgIG5vZGUgPSBzZWxmLl9Ob2RlKHNlbGYuX2hlYWRlci5fZWxlbWVudCxzZWxmLl9oZWFkZXIsc2VsZi5faGVhZGVyKSAjIHVwZGF0ZSBoZWFkZXIgZWxlbWVudCBpbiBhIG5ldyBwb3NpdGlvbiBvZiBsaXN0CiAgICAgICAgICAgIHNlbGYuX2hlYWRlci5fcHJldiA9IG5vZGUKICAgICAgICBlbHNlOiNzZSBjJ8OoIHBpw7kgZGkgdW4gZWxlbWVudG8gYWdnaXVuZ2kgdW4gbm9kbyBhbGxhIHRlc3RhIGRlbGxhIGxpc3RhIGUgY3JlYSB1biBudW92byBub2RvIGNvbiBlbGVtZW50IGhlZGVhciBlIGNvbGxlZ2FsbyBzaWEgYWxsYSBudW92YSB0ZXN0YSBjaGUgYWwgbm9kbyBzdWNjZXNzaXZvIGEgY3VpIGVyYSBjb2xsZWdhdGF0YSBpbCB2ZWNjaGlvIG5vZG8gZGkgdGVzdGEKICAgICAgICAgICAgbm9kZSA9IHNlbGYuX05vZGUoc2VsZi5faGVhZGVyLl9lbGVtZW50LCBzZWxmLl9oZWFkZXIsIHNlbGYuX2hlYWRlci5fbmV4dCkKICAgICAgICAgICAgcG9zaXRpb24gPSBzZWxmLl9tYWtlX3Bvc2l0aW9uKHNlbGYuX2hlYWRlci5fbmV4dCkgICMgcG9zaXRpb24gb2Ygbm9kZSBuZXh0IGhlYWRlcgogICAgICAgICAgICBwb3NpdGlvbi5fbm9kZS5fcHJldiA9IG5vZGUgICMgdXBkYXRlIG5vZGUgYWZ0ZXIgaGVhZGVyCiAgICAgICAgc2VsZi5faGVhZGVyLl9lbGVtZW50ID0gZQogICAgICAgIHNlbGYuX2hlYWRlci5fbmV4dCA9IG5vZGUKICAgICAgICBzZWxmLl9zaXplICs9IDEKICAgICAgICAjcHJpbnQoIlFRUVFRUVFRUVFRUVFRUVFRUVFRUVEiLCBzZWxmLl9oZWFkZXIuX2VsZW1lbnQpCiAgICAgICAgcmV0dXJuIHNlbGYuX21ha2VfcG9zaXRpb24oc2VsZi5faGVhZGVyKQoKCgogICAgZGVmIGFkZF9sYXN0KHNlbGYsIGUpOgogICAgICAgICNJbnNlcmlzY2UgbCdlbGVtZW50byBlIGluIGNvZGEgYWxsYSBsaXN0YSBlIHJlc3RpdHVpc2NlIGxhIFBvc2l0aW9uIGRlbCBudW92byBlbGVtZW50bwoKICAgICAgICBpZiBzZWxmLmlzX2VtcHR5KCk6CiAgICAgICAgICAgIHNlbGYuX2hlYWRlciA9IHNlbGYuX05vZGUoZSwgc2VsZi5faGVhZGVyLCBzZWxmLl9oZWFkZXIpCiAgICAgICAgICAgIHNlbGYuX2hlYWRlci5fbmV4dCA9IHNlbGYuX2hlYWRlcgogICAgICAgICAgICBzZWxmLl9oZWFkZXIuX3ByZXYgPSBzZWxmLl9oZWFkZXIKICAgICAgICAgICAgc2VsZi5fc2l6ZSA9IDEKICAgICAgICAgICAgcmV0dXJuIHNlbGYuX21ha2VfcG9zaXRpb24oc2VsZi5faGVhZGVyKQogICAgICAgIGlmIHNlbGYuX19sZW5fXygpID09IDE6CiAgICAgICAgICAgICNTZSBjJ2UnIHVuIHNvbG8gZWxlbWVudG8gYWdnaXVuZ2kgdW4gbm9kbyBhbGxhIGNvZGEgZGVsbGEgbGlzdGEgZSBjb2xsZWdhbG8gYWxsJ2hlYWRlciBlIGNvbGxlZ2EKICAgICAgICAgICAgbm9kZSA9IHNlbGYuX05vZGUoZSwgc2VsZi5faGVhZGVyLCBzZWxmLl9oZWFkZXIpICAjIHVwZGF0ZSBoZWFkZXIgZWxlbWVudCBpbiBhIG5ldyBwb3NpdGlvbiBvZiBsaXN0CiAgICAgICAgICAgIHNlbGYuX2hlYWRlci5fbmV4dCA9IG5vZGUKICAgICAgICBlbHNlOgogICAgICAgICAgICAjc2UgYyfDqCBwacO5IGRpIHVuIGVsZW1lbnRvIGFnZ2l1bmdpIHVuIG5vZG8gYWxsYSBjb2RhIGRlbGxhIGxpc3RhIGUgY3JlYSB1biBudW92byBub2RvIGNvbiBlbGVtZW50IGxhIHZlY2NoaWEKICAgICAgICAgICAgI2NvZGEgZGVsbGEgbGlzdGEgZSBjb2xsZWdhbG8gc2lhIGFsbGEgbnVvdmEgY29kYSBkZWxsYSBsaXN0YSBjaGUgYWwgbm9kbyBwcmVjZWRlbnRlICBhIGN1aSBlcmEgY29sbGVnYXRhdG8KICAgICAgICAgICAgI2lsIHZlY2NoaW8gbm9kbyBkaSBjb2RhCiAgICAgICAgICAgIG5vZGUgPSBzZWxmLl9Ob2RlKGUsIHNlbGYuX2hlYWRlci5fcHJldiwgc2VsZi5faGVhZGVyKQogICAgICAgICAgICBwb3NpdGlvbiA9IHNlbGYuX21ha2VfcG9zaXRpb24oc2VsZi5faGVhZGVyLl9wcmV2KSAgIyBwb3NpdGlvbiBvZiBub2RlIG5leHQgaGVhZGVyCiAgICAgICAgICAgIHBvc2l0aW9uLl9ub2RlLl9uZXh0ID0gbm9kZSAgIyB1cGRhdGUgbm9kZSBhZnRlciBoZWFkZXIKICAgICAgICAjc2VsZi5faGVhZGVyLl9lbGVtZW50ID0gZQogICAgICAgIHNlbGYuX2hlYWRlci5fcHJldiA9IG5vZGUKICAgICAgICBzZWxmLl9zaXplICs9IDEKICAgICAgICByZXR1cm4gc2VsZi5fbWFrZV9wb3NpdGlvbihzZWxmLl9oZWFkZXIpCiAgICAgICAgIiIi</text>
      </register>
      <register name="9" type="4">
        <text>class Position(PositionalList.Position):
        &quot;&quot;&quot;An abstraction representing the location of a single element.
  
        Note that two position instaces may represent the same inherent
        location in the list.  Therefore, users should always rely on
        syntax 'p == q' rather than 'p is q' when testing equivalence of
        positions.
        &quot;&quot;&quot;

        def __init__(self, container, node):
            &quot;&quot;&quot;Constructor should not be invoked by user.&quot;&quot;&quot;
            super(self).__init__(container ,node)
            

        def element(self):
            &quot;&quot;&quot;Return the element stored at this Position.&quot;&quot;&quot;
            return super(PositionalList.Position ,self).
        
        def __eq__(self, other):
            &quot;&quot;&quot;Return True if other is a Position representing the same location.&quot;&quot;&quot;
            return super(Position ,self).

        def __ne__(self, other):
            &quot;&quot;&quot;Return True if other does not represent the same location.&quot;&quot;&quot;
            return not (self == other)  # opposite of __eq__</text>
      </register>
      <register name="-" type="4">
        <text>cursor_to_delete = cursor</text>
      </register>
    </registers>
    <search>
      <last-dir>0</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search />
      <history-cmd />
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>