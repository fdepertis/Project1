<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/tree/tree.py" timestamp="1538903064336">
        <mark key="[" line="115" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/tree/linked_binary_tree.py" timestamp="1539097766263">
        <mark key="[" line="35" column="24" />
        <mark key="]" line="110" column="30" />
        <mark key="^" line="110" column="30" />
        <mark key="." line="110" column="30" />
      </file>
      <file name="/Dummy.txt" timestamp="1539259724038">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/tdp_test/ese_tree_binarySearchTree.py" timestamp="1539071102893">
        <mark key="'" line="12" column="91" />
        <mark key="[" line="184" column="0" />
        <mark key="]" line="184" column="0" />
        <mark key="." line="184" column="0" />
      </file>
      <file name="/Python Console" timestamp="1539267006058">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/map/map_base.py" timestamp="1539071427306">
        <mark key="[" line="33" column="20" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/map/binary_search_tree.py" timestamp="1539071074438">
        <mark key="[" line="23" column="0" />
      </file>
      <file name="/a.dummy" timestamp="1539165751027">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/circular_positional_list.py" timestamp="1539270396557">
        <mark key="[" line="68" column="12" />
        <mark key="]" line="68" column="12" />
        <mark key="." line="68" column="12" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/tree/binary_tree.py" timestamp="1538985562353">
        <mark key="[" line="78" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/project1/ese_tree_binarySearchTree.py" timestamp="1539095263335">
        <mark key="[" line="184" column="10" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/list/positional_list.py" timestamp="1539256843309">
        <mark key="[" line="85" column="6" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/test_circular_positional_list.py" timestamp="1539271027069">
        <mark key="[" line="45" column="49" />
        <mark key="]" line="48" column="4" />
        <mark key="." line="48" column="4" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/util.py" timestamp="1538997020032">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/project1/reverse.py" timestamp="1539259716981">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/tdp_test/test_circular_positional_list.py" timestamp="1539242621748">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/MyList.py" timestamp="1539068725620">
        <mark key="[" line="40" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="12" column="91" filename="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/tdp_test/ese_tree_binarySearchTree.py" />
    </jumps>
    <registers>
      <register name="1" type="4">
        <text encoding="base64">CgoKICAgICAgICByZXR1cm4gVHJ1ZQ==</text>
      </register>
      <register name="&quot;" type="4">
        <text>8 7 2 3 &quot;t&quot;</text>
      </register>
      <register name="2" type="4">
        <text>if type(self.first().element()) is type(int):

        elif type(self.first().element()) is type(int):

        else:</text>
      </register>
      <register name="3" type="4">
        <text encoding="base64">ICAiIiIKICAgIGRlZiBfdmFsaWRhdGUoc2VsZiwgcCk6CiAgICAgICAgUmV0dXJuIHBvc2l0aW9uJ3Mgbm9kZSwgb3IgcmFpc2UgYXBwcm9wcmlhdGUgZXJyb3IgaWYgaW52YWxpZC4KICAgICAgICBpZiBub3QgaXNpbnN0YW5jZShwLCBzZWxmLlBvc2l0aW9uKToKICAgICAgICAgICAgcmFpc2UgVHlwZUVycm9yKCdwIG11c3QgYmUgcHJvcGVyIFBvc2l0aW9uIHR5cGUnKQogICAgICAgIGlmIHAuX2NvbnRhaW5lciBpcyBub3Qgc2VsZjoKICAgICAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigncCBkb2VzIG5vdCBiZWxvbmcgdG8gdGhpcyBjb250YWluZXInKQogICAgICAgIGlmIHAuX25vZGUgaXMgTm9uZTogICMgY29udmVudGlvbiBmb3IgZGVwcmVjYXRlZCBub2RlcwogICAgICAgICAgICByYWlzZSBWYWx1ZUVycm9yKCdwIGlzIG5vIGxvbmdlciB2YWxpZCcpCiAgICAgICAgcmV0dXJuIHAuX25vZGUKICAgICIiIg==</text>
      </register>
      <register name="4" type="4">
        <text>print(&quot;SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS&quot;)
            print(self.to_string())
            print(&quot;SSSSSSSSSSSSSSSSSSssssssssssssssssssssssssssssssssssssssss&quot;)</text>
      </register>
      <register name="5" type="4">
        <text>first_cursor = self.first()
        last_cursor = self.last()
        #print(last_cursor.element(),self.before(last_cursor).element(),self.before(self.before(last_cursor)).element(),self.before(self.before(self.before(last_cursor))).element())
        f</text>
      </register>
      <register name="6" type="4">
        <text>print(first_cursor.element(), last_cursor.element())
            if k == (self._size/2):
                
            first_cursor._node._element = last_cursor._node._element
            first_cursor = self.after(first_cursor)
            last_cursor = self.before(last_cursor)</text>
      </register>
      <register name="7" type="4">
        <text encoding="base64">b3B5X2N1cnNvciA9IHNlbGYuY29weSgpCiAgICAgICAg</text>
      </register>
      <register name="8" type="4">
        <text>if k == (self._size/2):
               
            else:
                first_cursor._node._element = last_cursor._node._element
            first_cursor = self.after(first_cursor)</text>
      </register>
      <register name="9" type="4">
        <text>print(str(cpl))
    cpl.reverse()
    print(str(cpl))
    print(&quot;--------------------------------&quot;)</text>
      </register>
      <register name="-" type="4">
        <text>8 7 2 3 &quot;t&quot;</text>
      </register>
    </registers>
    <search>
      <last-dir>0</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search />
      <history-cmd />
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>