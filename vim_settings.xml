<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/tree/tree.py" timestamp="1538903064336">
        <mark key="[" line="115" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/tree/linked_binary_tree.py" timestamp="1539097766263">
        <mark key="[" line="35" column="24" />
        <mark key="]" line="110" column="30" />
        <mark key="^" line="110" column="30" />
        <mark key="." line="110" column="30" />
      </file>
      <file name="/Dummy.txt" timestamp="1539275193781">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/tdp_test/ese_tree_binarySearchTree.py" timestamp="1539071102893">
        <mark key="'" line="12" column="91" />
        <mark key="[" line="184" column="0" />
        <mark key="]" line="184" column="0" />
        <mark key="." line="184" column="0" />
      </file>
      <file name="/Python Console" timestamp="1540226602610">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/project1/score_board.py" timestamp="1540221969297">
        <mark key="[" line="0" column="59" />
        <mark key="]" line="97" column="8" />
        <mark key="." line="97" column="8" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/map/map_base.py" timestamp="1539071427306">
        <mark key="[" line="33" column="20" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/queue/array_queue.py" timestamp="1539674679896">
        <mark key="[" line="7" column="7" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/list/doubly_linked_base.py" timestamp="1540228615593">
        <mark key="[" line="73" column="71" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/map/binary_search_tree.py" timestamp="1539071074438">
        <mark key="[" line="23" column="0" />
      </file>
      <file name="/a.dummy" timestamp="1539165751027">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/circular_positional_list.py" timestamp="1539274913038">
        <mark key="[" line="151" column="3" />
        <mark key="]" line="151" column="3" />
        <mark key="." line="151" column="3" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/project1/verifica.py" timestamp="1540227420226">
        <mark key="[" line="491" column="24" />
        <mark key="]" line="491" column="24" />
        <mark key="." line="491" column="24" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/tree/binary_tree.py" timestamp="1538985562353">
        <mark key="[" line="78" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/ecercise.py" timestamp="1539273101907">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/project1/ese_tree_binarySearchTree.py" timestamp="1539095263335">
        <mark key="[" line="184" column="10" />
      </file>
      <file name="$USER_HOME$/.PyCharmCE2018.2/system/python_stubs/1845667114/builtins.py" timestamp="1540033022759">
        <mark key="[" line="256" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tecniche di Programmazione/TdP_collections/TdP_collections/list/positional_list.py" timestamp="1540227869984">
        <mark key="[" line="122" column="6" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/test_circular_positional_list.py" timestamp="1539282243770">
        <mark key="[" line="19" column="40" />
        <mark key="]" line="48" column="4" />
        <mark key="." line="48" column="4" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/util.py" timestamp="1538997020032">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/project1/reverse.py" timestamp="1539259716981">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/tdp_test/test_circular_positional_list.py" timestamp="1539242621748">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/MyList.py" timestamp="1539068725620">
        <mark key="[" line="40" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="12" column="91" filename="$USER_HOME$/Documenti/Magistrale/TDP/Tdp_repository/venv/tdp_test/ese_tree_binarySearchTree.py" />
    </jumps>
    <registers>
      <register name="1" type="4">
        <text encoding="base64">CmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBwbCA9IFBvc2l0aW9uYWxMaXN0KCkKICAgIHBsLmFkZF9sYXN0KDMpCiAgICBwcmludChwbC5maXJzdCgpLl9ub2RlLl9uZXh0LHBsLmZpcnN0KCkuX25vZGUuX3ByZXYscGwuZmlyc3QoKS5fbm9kZS5fZWxlbWVudCkKICAgIHBsLmRlbGV0ZShwbC5maXJzdCgpKQogICAgcHJpbnQocGwuZmlyc3QoKS5fbm9kZS5fbmV4dCxwbC5maXJzdCgpLl9ub2RlLl9wcmV2LHBsLmZpcnN0KCkuX25vZGUuX2VsZW1lbnQp</text>
      </register>
      <register name="&quot;" type="4">
        <text encoding="base64">CmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBwbCA9IFBvc2l0aW9uYWxMaXN0KCkKICAgIHBsLmFkZF9sYXN0KDMpCiAgICBwcmludChwbC5maXJzdCgpLl9ub2RlLl9uZXh0LHBsLmZpcnN0KCkuX25vZGUuX3ByZXYscGwuZmlyc3QoKS5fbm9kZS5fZWxlbWVudCkKICAgIHBsLmRlbGV0ZShwbC5maXJzdCgpKQogICAgcHJpbnQocGwuZmlyc3QoKS5fbm9kZS5fbmV4dCxwbC5maXJzdCgpLl9ub2RlLl9wcmV2LHBsLmZpcnN0KCkuX25vZGUuX2VsZW1lbnQp</text>
      </register>
      <register name="2" type="4">
        <text>insert = input(&quot;Inserisci il valore da aggiungere in testa:\n&quot;)
                        print(&quot;Lista prima dell'inserimento: &quot;, str(l_2))
                        l_2.add_first(int(insert))
                        print(&quot;Lista dopo l'inserimento: &quot;, str(l</text>
      </register>
      <register name="3" type="4">
        <text>insert = input(&quot;Inserisci il valore da aggiungere in coda:\n&quot;)
                        print(&quot;Lista prima dell'inserimento: &quot;, str(l_2))
                        l_2.add_last(int(insert))
                        print(&quot;Lista dopo l'inserimento: &quot;, str(l_2))</text>
      </register>
      <register name="4" type="4">
        <text>risp = 1
                while risp == 1:
                    insert = input(&quot;Inserisci il valore :\n&quot;)
                    print(&quot;Lista prima dell'inserimento: &quot;, str(l_1))
                    l_1.add_first(int(insert))
                    print(&quot;Lista dopo l'inserimento: &quot;, str(l_1))
                    while True:
                        risp = int(input(&quot;Vuole inserire un altro elemento?(1-yes or 2-no):\n&quot;))
                        if risp == 2 or risp == 1:
                            break
                        else:
                            print(&quot;Scelta errata, ripeta&quot;)</text>
      </register>
      <register name="5" type="4">
        <text>while exit == 0:
                    print(&quot;-----------------------------------------------------&quot;)
                    print(&quot;\nTest Circular Positional List\n&quot;)
                    print(&quot;1-Visualizza gli elementi della lista [print(str(list))]\n&quot;)
                    print(&quot;2-Add di due liste [x + y]\n&quot;)
                    print(&quot;3-Verifica se una position Ã¨ presente nella lista [ p in x]\n&quot;)
                    print(&quot;4-Restituisce l'elemento contenuto nella position p [ x[p] ]\n&quot;)
                    print(&quot;5-Restituisci il numero di elementi di x  [len(x)]\n&quot;)
                    print(&quot;6-Sostituisci l'elemento di p con e [x[p] = e]\n&quot;)
                    print(&quot;7-Rimuove l'elemento nella position p invalidando la position [del p]\n&quot;)
                    print(&quot;8-Generatore degli elementi [__iter__]\n&quot;)
                    print(&quot;9-Ritorna al passo precedente\n&quot;)
                    print(&quot;10-Termina test\n&quot;)
                    print(&quot;-----------------------------------------------------&quot;)
                    x = input(&quot;Scegli una delle opzioni:\n&quot;)
                    print(&quot;-----------------------------------------------------&quot;)
                    if int(x) == 1:
                        break
                    elif int(x) == 2:
                        break
                    elif int(x) == 3:
                        break
                    elif int(x) == 4:
                        break
                    elif int(x) == 5:
                        break
                    elif int(x) == 6:
                        break
                    elif int(x) == 7:
                        break
                    elif int(x) == 8:
                        break
                    elif int(x) == 9:
                        break
                    elif int(x) == 10:
                        exit = 1
                    else:
                        print(&quot;Scelta errata, ripeta&quot;)</text>
      </register>
      <register name="6" type="4">
        <text encoding="base64">ICAgIAogICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSByID09IDE6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0ID0gaW5wdXQoIkluc2VyaXNjaSBpbCB2YWxvcmUgZGEgYWdnaXVuZ2VyZSBpbiB0ZXN0YTpcbiIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiTGlzdGEgcHJpbWEgZGVsbCdpbnNlcmltZW50bzogIiwgc3RyKGxfMSkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsXzEuYWRkX2ZpcnN0KGludChpbnNlcnQpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIkxpc3RhIGRvcG8gbCdpbnNlcmltZW50bzogIiwgc3RyKGxfMSkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg</text>
      </register>
      <register name="7" type="4">
        <text>while True:
                                risp = int(input(&quot;Vuole inserire un altro elemento?(1-yes or 2-no):\n&quot;))
                                if risp == 2 or risp == 1:
                                    break
                                else:
                                    print(&quot;Scelta errata, ripeta&quot;)</text>
      </register>
      <register name="8" type="4">
        <text>elif int(x) == 26:
                        break</text>
      </register>
      <register name="9" type="4">
        <text encoding="base64">CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxfMS5pc19lbXB0eSgpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIkxhIGxpc3RhIMOoIHZ1b3RhIikKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJMYSBsaXN0YSBub24gw6ggdnVvdGEiKQ==</text>
      </register>
      <register name="-" type="4">
        <text>b</text>
      </register>
    </registers>
    <search>
      <last-dir>0</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search />
      <history-cmd />
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>