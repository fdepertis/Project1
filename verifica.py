from circular_positional_list import CircularPositionalList

cpl = CircularPositionalList()
print(str(cpl))
cpl.add_first(1)
print(str(cpl))
cpl.add_first(2)
print(str(cpl))
cpl.add_first(3)
print(str(cpl))
cpl.add_first(4)
print(str(cpl))
cpl.add_last(5)
print(str(cpl))
cpl.add_last(6)
print(str(cpl))
cpl.add_last(7)
print(str(cpl))
print("----------------------------Test-Bubble-Sort---------------------------")
print("Lista",str(cpl))
copy = cpl.bubble_sorted()
print("Lista ordinata--->>",str(copy))
print("Lista iniziale dopo l'ordinamento --->>",str(cpl))
print("LISTA INIZIALE NON ORDINATA")
print("Iteratore Bubblesort--->",str(copy.generator_bubble_sort()))
print("-----------------------------------------------------------------------")
print("cpl contiente first? ", cpl.first() in cpl)
print("cpl contiente last? ", cpl.last() in cpl)
print("cpl contiene None?", None in cpl)
print("creo una nuova lista chiamata cpl2 con gli stessi elementi di cpl")
cpl2 = cpl.copy()
print(cpl2.first())
print(str(cpl2))
print("cpl2 è uguale a cpl?", cpl2 == cpl)
print("Sia cpl3 = cpl + cpl2")
cpl3 = cpl + cpl2
print(str(cpl3))
print("Quanti 1 ci sono in cpl3? ", cpl3.count(1))
print("Quanti 9 ci sono in cpl3? ", cpl3.count(9))
print("------------")
print(str(cpl))
cpl.reverse()
print(str(cpl))
cpl.delete(cpl.last())
print(str(cpl))
cpl.delete(cpl.first())
print(str(cpl))
print("Svuoto cpl:")
cpl.clear()
print(str(cpl))
cpl.add_last(10)
cpl.add_last(20)
cpl.add_last(30)
cpl.add_last(40)
print("Il primo è:", cpl[cpl.first()])
print("L'ultimo è:", cpl[cpl.last()])
print(str(cpl))
print("Sostituisco 40 a 50")
cpl[cpl.last()]=50
print(str(cpl))
print("cpl è ordinata?", cpl.is_sorted())
cpl.add_last(5)
print("cpl è ordinata?", cpl.is_sorted())